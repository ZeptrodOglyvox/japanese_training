{"version":3,"sources":["js/characters.js","js/main.js"],"names":["hiragana","charset","cb","$","on","evt","preventDefault","append","checkboxes","inverted","invertObj","obj","Object","keys","reduce","acc","k","getPool","pool","checked","assign","id","length","counter","choose","choices","n","ret","i","index","Math","floor","random","push","previous","document","getElementById","answer","current","chars","innerHTML","join","addEventListener","map","x","text","each","min","max"],"mappings":"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","file":"main.b72eeef4.js","sourceRoot":"..\\src","sourcesContent":["hiragana = {\r\n'vowel' : {\r\n    'a':'あ',\r\n    'i':'い',\r\n    'u':'う',\r\n    'e':'え',\r\n    'o':'お',\r\n},\r\n\r\n 'k': {\r\n    'ka':'か',\r\n    'ki':'き',\r\n    'ku':'く',\r\n    'ke':'け',\r\n    'ko':'こ',\r\n},\r\n\r\n 's': {\r\n    'sa':'さ',\r\n    'shi':'し',\r\n    'su':'す',\r\n    'se':'せ',\r\n    'so':'そ',\r\n},\r\n\r\n 'h': {\r\n    'ha': 'は',\r\n    'hi': 'ひ',\r\n    'fu': 'ふ',\r\n    'he': 'へ',\r\n    'ho': 'ほ',\r\n    \r\n},\r\n\r\n 't': {\r\n    'ta': 'た',\r\n    'chi': 'ち',\r\n    'tsu': 'つ',\r\n    'te': 'て',\r\n    'to': 'と',\r\n},\r\n 'n': {\r\n\r\n    'na': 'な',\r\n    'ni': 'に',\r\n    'nu': 'ぬ',\r\n    'ne': 'ね',\r\n    'no': 'の',\r\n},\r\n\r\n 'm': {\r\n\r\n    'ma': 'ま',\r\n    'mi': 'み',\r\n    'mu': 'む',\r\n    'me': 'め',\r\n    'mo': 'も',\r\n},\r\n\r\n 'r': {\r\n    'ra': 'ら',\r\n    'ri': 'り',\r\n    'ru': 'る',\r\n    're': 'れ',\r\n    'ro': 'ろ',\r\n},\r\n\r\n 'y': {\r\n    'ya': 'や',\r\n    'yu': 'ゆ',\r\n    'yo': 'よ',\r\n},\r\n\r\n'w': {\r\n    'wa': 'わ',\r\n    'wo': 'を',\r\n    'n': 'ん',\r\n}\r\n}","import './characters'\r\n\r\n// Create checkboxes\r\nfor (const charset in hiragana) {\r\n    const cb = $(`\r\n    <div>\r\n    <input type=\"checkbox\" id=\"${charset}\" name=\"${charset}\" checked >\r\n    <label for=\"${charset}\">${charset}</label>\r\n    </div>\r\n    `)\r\n    .on('keyup', function(evt){evt.preventDefault();});\r\n\r\n\r\n    $('.checkboxes').append(cb);\r\n}\r\n\r\nconst checkboxes = $('input[type=\"checkbox\"]');\r\nlet inverted = false;\r\n\r\nfunction invertObj(obj) {\r\n    return Object.keys(obj).reduce((acc,k) => {\r\n        acc[[obj[k]]] = k;\r\n        return acc;\r\n    }, {});\r\n}\r\n\r\nfunction getPool() {\r\n    let pool = {};\r\n    for(const cb of checkboxes) {\r\n        if (cb.checked) {\r\n            Object.assign(pool, hiragana[cb.id]);\r\n        }\r\n    }\r\n\r\n    if (inverted) return invertObj(pool);\r\n    else return pool;\r\n}\r\n\r\n// Exercise logic\r\nlet length = 1;\r\nlet counter = 0;\r\n\r\nfunction choose(choices, n=1) {\r\n    let ret = [];\r\n    for(let i=0; i<n; i++){ \r\n        let index = Math.floor(Math.random() * choices.length);\r\n        ret.push(choices[index]);\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nconst previous = document.getElementById('previous');\r\nconst answer = document.getElementById('answer');\r\nconst current = document.getElementById('current');\r\n\r\nlet chars = choose(Object.keys(getPool()), length);\r\ncurrent.innerHTML = chars.join('');\r\n\r\ndocument.addEventListener('keydown', () => {\r\n    const pool = getPool();\r\n\r\n    answer.innerHTML = `${\r\n        chars.map((x) => pool[x]).join('')\r\n    } &nbsp; ${chars.join('')}`;\r\n\r\n    chars = choose(Object.keys(pool), length);\r\n    current.innerHTML = chars.join('');\r\n\r\n    counter = counter + 1;\r\n    $('#counter-value').text(counter);\r\n})\r\n\r\n// Select Buttons\r\n$('#select-all').on('click', function(){\r\n    checkboxes.each(function(){this.checked = true});\r\n});\r\n$('#select-none').on('click', function(){\r\n    checkboxes.each(function(){this.checked = false});\r\n});\r\n\r\n// Manage Length\r\n$('#length-plus').on('click', function() {\r\n    length = Math.min(length+1, 9);\r\n    $('#length-indicator').text(length);\r\n}).on('keyup', function(evt){evt.preventDefault();});\r\n\r\n$('#length-minus').on('click', function() {\r\n    length = Math.max(length-1, 1);\r\n    $('#length-indicator').text(length);\r\n}).on('keyup', function(evt){evt.preventDefault();});\r\n\r\n// Invert \r\n$('#invert').on('click', function(){\r\n    inverted = !inverted;\r\n    this.innerHTML = `${inverted ? 'Reading' : 'Hiragana'} Training`; \r\n}).on('keyup', function(evt){evt.preventDefault();});"]}